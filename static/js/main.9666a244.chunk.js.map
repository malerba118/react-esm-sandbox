{"version":3,"sources":["../../src/utils/url.ts","../../src/utils/key-by.ts","../../src/utils/colors.ts","../../src/utils/hooks.ts","../../node_modules/style-inject/dist/style-inject.es.js","../../src/interpreter/interpreter.tsx","../../src/utils/uuid.ts","../../src/sandbox/spinner/spinner.tsx","../../src/sandbox/auto-scroll/auto-scroll.tsx","../../src/sandbox/console/console.tsx","../../src/sandbox/sandbox.tsx","../../src/playground/editor/editor.tsx","../../src/playground/editor-group/editor-group.tsx","../../src/playground/playground.tsx","../../src/transforms/javascript.ts","App.tsx","../../src/utils/import-map.ts","../../src/transforms/typescript.ts","../../src/transforms/css.ts","assets/index.txt","assets/InteractiveContainer.txt","assets/utils.txt","assets/useData.txt","assets/styles.txt","index.tsx"],"names":["resolveUrl","baseUrl","segment","URL","href","getFileExtension","url","urlSegments","split","fileSegments","length","keyBy","items","attr","reduce","obj","item","themeColorsMap","dracula","background","foreground","seti","isDark","color","r","g","b","_color","match","slice","replace","Math","sqrt","getter","theme","colors","overlay","getThemeColors","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","esmShimsUrl","encodeURIComponent","importsFromFiles","files","imports","forEach","file","path","contents","Interpreter","doc","entrypoint","importMap","onLoading","onLoad","onError","onLog","className","transforms","data","interpreterId","c","random","toString","window","location","origin","transpiledFilesMap","setTranspiledFilesMap","prevSourceFilesMapRef","key","setKey","inputRef","incrementKey","prev","execute","iframeRef","listener","event","payload","addEventListener","removeEventListener","nextSourceFilesMap","prevSourceFilesMap","transpiledFilePromises","Object","entries","map","nextSourceFilePath","nextSourceFile","prevSourceFile","fileExtension","transform","Promise","all","then","getNextTranspiledFilesMap","current","nextTranspiledFilesMap","err","contentWindow","postMessage","_importMap","values","JSON","stringify","importMapUrl","jsonToDataUrl","entrypointUrl","builtDoc","inputDocument","buildDocument","keys","rootClasses","srcDoc","classes","el","scrollIntoView","block","behavior","Status","consoleStyles","BASE_BACKGROUND_COLOR","BASE_FONT_SIZE","LOG_ERROR_BACKGROUND","LOG_WARN_BACKGROUND","LOG_INFO_BACKGROUND","defaultComponents","loading","_classes","error","onClose","onClick","message","console","open","logs","onToggle","onClear","stickToBottom","setStickToBottom","consoleFeedClasses","styles","root","header","toggle","tabIndex","role","title","e","stopPropagation","ClearIcon","CollapseIcon","ExpandIcon","onScroll","elem","target","scrollTop","scrollHeight","offsetHeight","ConsoleFeed","variant","components","handles","otherProps","Loading","status","setStatus","setError","setLogs","consoleOpen","setConsoleOpen","LoadingComponent","ErrorComponent","ConsoleComponent","interpreterClasses","interpreter","log","Loaded","Errored","value","onChange","highlight","tabSize","lineNumbers","mode","readOnly","editorRef","lines","line","addLineClass","removeLineClass","classNames","Codemirror","editorDidMount","editor","setSize","setTimeout","refresh","options","onBeforeChange","_","__","val","PlaygroundLayout","active","onActiveChange","_styles","headerOverlay","onFileChange","focusOnActivation","editorOptions","editors","setEditor","getEditor","activeFile","find","HeaderComponent","focus","handleChange","baseEditorOptions","extension","tsx","ts","jsx","js","json","html","scss","less","yaml","yml","getEditorBaseOptions","providedEditorOptions","mergedEditorOptions","tabs","layout","Vertical","interpreterRef","interpreterFiles","setInterpreterFiles","requestInterpreterUpdate","editorGroupFiles","array","tab","push","editorGroup","handle","sandbox","isJSX","targets","presets","modules","code","transpile","dependencies","packageName","packageVersion","SkypackImportMap","react","JavascriptTransform","isTSX","jsxPragma","allowNamespaces","allowDeclareFields","onlyRemoveTypeImports","allExtensions","TypescriptTransform","highlightExample","filePath","App","useState","setFiles","setActive","setHighlight","scale","setScale","useThemeColors","updateFile","f","utilsFile","containerFile","p","w","position","zIndex","spacing","size","onMouseEnter","onMouseLeave","colorScheme","defaultValue","min","max","step","bg","top","right","bottom","base","borderTop","customTheme","extendTheme","config","useSystemColorMode","initialColorMode","fonts","body","heading","white","gray","50","100","200","300","400","500","600","700","800","900","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9666a244.chunk.js","sourcesContent":["export const jsonToDataUrl = (data: any) => {\n  return `data:application/json,${encodeURIComponent(JSON.stringify(data))}`\n}\n\nexport const jsToDataUrl = (data: string) => {\n  return `data:application/javascript,${encodeURIComponent(data)}`\n}\n\nexport const resolveUrl = (baseUrl: string, segment: string) => {\n  return new URL(segment, baseUrl).href\n}\n\nexport const getFileExtension = (url: string) => {\n  const urlSegments = url.split('/')\n  const lastUrlSegment = urlSegments[urlSegments.length - 1]\n  const fileSegments = lastUrlSegment.split('.')\n  if (fileSegments.length > 1) {\n    return fileSegments[fileSegments.length - 1]\n  }\n  return ''\n}\n","export const keyBy = <T extends object, K extends keyof T>(\n  items: T[],\n  attr: K\n): Record<string, T> => {\n  return items.reduce((obj, item) => {\n    obj[item[attr as string]] = item\n    return obj\n  }, {} as Record<string, T>)\n}\n","export type ThemeColors = {\n  background: string\n  foreground: string\n  overlay: string\n}\n\nconst themeColorsMap: Record<\n  string,\n  { background: string; foreground: string }\n> = {\n  dracula: {\n    background: '#282a36',\n    foreground: '#f8f8f2'\n  },\n  'base16-light': {\n    background: '#f5f5f5',\n    foreground: '#202020'\n  },\n  seti: {\n    background: '#151718',\n    foreground: '#CFD2D1'\n  }\n}\n\nexport const getThemeColors = (theme: string): ThemeColors => {\n  const colors = themeColorsMap[theme]\n  return {\n    ...colors,\n    overlay: isDark(colors.background)\n      ? 'rgba(255,255,255,.05)'\n      : 'rgba(0,0,0,.05)'\n  }\n}\n\nexport const isDark = (color: string) => {\n  // Variables for red, green, blue values\n  let r, g, b, hsp\n  let _color: any = color\n\n  // Check the format of the color, HEX or RGB?\n  if (_color.match(/^rgb/)) {\n    // If RGB --> store the red, green, blue values in separate variables\n    _color = _color.match(\n      /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/\n    )\n\n    r = _color[1]\n    g = _color[2]\n    b = _color[3]\n  } else {\n    // If hex --> Convert it to RGB: http://gist.github.com/983661\n    _color = +(\n      '0x' + _color.slice(1).replace(_color.length < 5 && /./g, '$&$&')\n    )\n\n    r = _color >> 16\n    g = (_color >> 8) & 255\n    b = _color & 255\n  }\n\n  // HSP (Highly Sensitive Poo) equation from http://alienryderflex.com/hsp.html\n  hsp = Math.sqrt(0.299 * (r * r) + 0.587 * (g * g) + 0.114 * (b * b))\n\n  // Using the HSP value, determine whether the color is light or dark\n  if (hsp > 127.5) {\n    return false\n  } else {\n    return true\n  }\n}\n","import { useState, useMemo } from 'react'\nimport { getThemeColors } from './colors'\n\nexport const useConstant = <T>(getter: () => T): T => {\n  const [state] = useState(getter)\n  return state\n}\n\nexport const useThemeColors = (theme: string) => {\n  return useMemo(() => {\n    return getThemeColors(theme)\n  }, [theme])\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, {\n  useRef,\n  useEffect,\n  useState,\n  useMemo,\n  useCallback,\n  useImperativeHandle,\n  forwardRef,\n  CSSProperties,\n  MutableRefObject\n} from 'react'\nimport classnames from 'classnames'\nimport {\n  jsonToDataUrl,\n  resolveUrl,\n  getFileExtension,\n  jsToDataUrl\n} from '../utils/url'\nimport { v4 as uuid } from '../utils/uuid'\nimport { keyBy } from '../utils/key-by'\nimport { useConstant } from '../utils/hooks'\nimport { SourceFile, TranspiledFile, ImportMap, Log, Transform } from '../types'\nimport esmShims from './esm-shims.txt'\nimport classes from './interpreter.module.css'\n\nconst esmShimsUrl = jsToDataUrl(esmShims)\n\nexport interface InterpreterProps {\n  /**\n   * An html document to interpret\n   */\n  doc?: string\n  /**\n   * A list of files from which to import\n   */\n  files: SourceFile[]\n  /**\n   * A path of one of the files provided, to be treated as the entrypoint\n   */\n  entrypoint: string\n  /**\n   * An import map, to specify importable dependencies\n   */\n  importMap?: ImportMap\n  /**\n   * A callback run when the interpreter begins loading resources\n   */\n  onLoading?: () => void\n  /**\n   * A callback run when the interpreter finishes loading resources\n   */\n  onLoad?: () => void\n  /**\n   * A callback run when the interpreter failes to load resources\n   */\n  onError?: (error: Error) => void\n  /**\n   * A callback run whenever a console method is called inside of the interpreter\n   */\n  onLog?: (log: Log) => void\n  /**\n   * A map of file extensions to code transforms (most often these will be used to transpile to vanilla js)\n   */\n  transforms?: Record<string, Transform>\n  /**\n   * A css class to apply to the iframe that interprets the code\n   */\n  className?: string\n  /**\n   * Inline styles to apply to the iframe that interprets the code\n   */\n  style?: CSSProperties\n  /**\n   * Arbitrary data that will be posted to the iframe contentWindow\n   */\n  data?: any\n}\n\nconst importsFromFiles = (files: TranspiledFile[], baseUrl: string) => {\n  const imports = {}\n  files.forEach((file) => {\n    const url = resolveUrl(baseUrl, file.path)\n    imports[\n      url\n    ] = `data:application/javascript;charset=utf-8,${encodeURIComponent(\n      file.contents || ''\n    )}`\n  })\n  return imports\n}\n\ntype GetNextTranspiledFilesMapParams = {\n  prevSourceFilesMap: Record<string, SourceFile>\n  nextSourceFilesMap: Record<string, SourceFile>\n  transpiledFilesMap: Record<string, TranspiledFile>\n  transforms: Record<string, Transform>\n}\n\nconst getNextTranspiledFilesMap = async ({\n  prevSourceFilesMap,\n  nextSourceFilesMap,\n  transpiledFilesMap,\n  transforms\n}: GetNextTranspiledFilesMapParams) => {\n  const transpiledFilePromises = Object.entries(nextSourceFilesMap).map(\n    async ([nextSourceFilePath, nextSourceFile]) => {\n      const prevSourceFile = prevSourceFilesMap[nextSourceFilePath]\n      if (\n        !prevSourceFile ||\n        prevSourceFile.contents !== nextSourceFile.contents\n      ) {\n        const fileExtension = getFileExtension(nextSourceFile.path)\n        const transform = transforms[fileExtension]\n        // transform and add to nextTranspiledFilesMap\n        return {\n          path: nextSourceFile.path,\n          contents:\n            (await transform?.(nextSourceFile.contents)) ??\n            nextSourceFile.contents\n        }\n      } else {\n        // copy over old transpiled file to nextTranspiledFilesMap\n        return transpiledFilesMap[nextSourceFile.path]\n      }\n    }\n  )\n\n  return Promise.all(transpiledFilePromises).then((files) =>\n    keyBy(files, 'path')\n  )\n}\n\ntype BuildDocumentParams = {\n  interpreterId: string\n  inputDocument: string\n  baseUrl: string\n  importMapUrl: string\n  entrypointUrl: string\n}\n\nconst buildDocument = ({\n  interpreterId,\n  inputDocument,\n  baseUrl,\n  importMapUrl,\n  entrypointUrl\n}: BuildDocumentParams): string => {\n  return (\n    `<script>\n    window.__esm_sandbox__ = {\n      postMessage({type, payload}) {\n        window.parent.postMessage(\n          { \n            interpreterId: '${interpreterId}',\n            type,\n            payload\n          }, \n          '*'\n        )\n      },\n      createConsoleProxy(method, fn) {\n        return (...args) => {\n          this.postMessage({\n            type: 'log',\n            payload: {\n              method,\n              data: args\n            }\n          })\n          fn(...args)\n        }\n      }\n    }\n\n  const _debug = console.debug,\n        _log = console.log,\n        _info = console.info,\n        _warn = console.warn,\n        _error = console.error\n        _table = console.table\n\n  console.debug = __esm_sandbox__.createConsoleProxy('debug', _debug)\n  console.log = __esm_sandbox__.createConsoleProxy('log', _log)\n  console.info = __esm_sandbox__.createConsoleProxy('info', _info)\n  console.warn = __esm_sandbox__.createConsoleProxy('warn', _warn)\n  console.error = __esm_sandbox__.createConsoleProxy('error', _error)\n  console.table = __esm_sandbox__.createConsoleProxy('table', _table)\n\n  window.onerror = function myErrorHandler(errorMsg, url, lineNumber) {\n    __esm_sandbox__.postMessage({\n      type: 'error',\n      payload: new Error(errorMsg)\n    });\n    return false;\n  }\n</script>` +\n    inputDocument +\n    `\n<script defer src=\"${esmShimsUrl}\"></script>\n<script type=\"importmap-shim\" src=\"${importMapUrl}\"></script>\n<script data-alias=\"${baseUrl}\" type=\"module-shim\">\n__esm_sandbox__.postMessage({\n    type: 'loading',\n  })\n  import(\"${entrypointUrl}\")\n      .then(() => {\n        __esm_sandbox__.postMessage({\n          type: 'loaded',\n        })\n      })\n      .catch((err) => {\n        __esm_sandbox__.postMessage({\n          type: 'error',\n          payload: err\n        })\n      })\n</script>\n`\n  )\n}\n\nconst defaultDocument = `<!DOCTYPE html>\n<html>\n    <head>\n      <title>ESM Sandbox</title>\n    </head>\n    <body>\n      <div id=\"root\"></div>\n    </body>\n</html>`\n\nexport type InterpreterHandle = {\n  execute: () => void\n  iframeRef: MutableRefObject<HTMLIFrameElement | null>\n}\n\nexport const Interpreter = forwardRef<InterpreterHandle, InterpreterProps>(\n  (\n    {\n      doc = defaultDocument,\n      files = [],\n      entrypoint,\n      importMap,\n      onLoading,\n      onLoad,\n      onError,\n      onLog,\n      className,\n      transforms = {},\n      style,\n      data\n    }: InterpreterProps,\n    ref\n  ) => {\n    const interpreterId = useConstant(() => uuid())\n    const baseUrl = useConstant(() =>\n      resolveUrl(window.location.origin, entrypoint)\n    )\n    const [transpiledFilesMap, setTranspiledFilesMap] = useState<\n      Record<string, TranspiledFile>\n    >({})\n    const prevSourceFilesMapRef = useRef<Record<string, SourceFile>>({})\n    const [key, setKey] = useState(0)\n    const inputRef = useRef<HTMLIFrameElement | null>(null)\n\n    const incrementKey = useCallback(() => {\n      setKey((prev) => prev + 1)\n    }, [setKey])\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        execute: () => {\n          incrementKey()\n        },\n        iframeRef: inputRef\n      }),\n      [inputRef, incrementKey]\n    )\n\n    useEffect(() => {\n      const listener = (event: MessageEvent) => {\n        if (event.data?.interpreterId === interpreterId) {\n          if (event.data.type === 'loading') {\n            onLoading?.()\n          } else if (event.data.type === 'loaded') {\n            onLoad?.()\n          } else if (event.data.type === 'error') {\n            onError?.(event.data.payload)\n          } else if (event.data.type === 'log') {\n            onLog?.(event.data.payload)\n          }\n        }\n      }\n      window.addEventListener('message', listener)\n      return () => window.removeEventListener('message', listener)\n    }, [])\n\n    useEffect(() => {\n      const nextSourceFilesMap = keyBy(files, 'path')\n      getNextTranspiledFilesMap({\n        prevSourceFilesMap: prevSourceFilesMapRef.current,\n        nextSourceFilesMap,\n        transpiledFilesMap,\n        transforms\n      })\n        .then((nextTranspiledFilesMap) => {\n          setTranspiledFilesMap(nextTranspiledFilesMap)\n          prevSourceFilesMapRef.current = nextSourceFilesMap\n        })\n        .catch((err) => {\n          onError?.(err)\n        })\n    }, [files])\n\n    useEffect(() => {\n      inputRef.current?.contentWindow?.postMessage(data, '*')\n    }, [data])\n\n    const _importMap = useMemo(() => {\n      return {\n        ...importMap,\n        imports: {\n          ...importMap?.imports,\n          ...importsFromFiles(Object.values(transpiledFilesMap), baseUrl)\n        }\n      }\n    }, [JSON.stringify(importMap), transpiledFilesMap, baseUrl])\n\n    const importMapUrl = useMemo(() => jsonToDataUrl(_importMap), [_importMap])\n\n    const entrypointUrl = _importMap.imports[baseUrl]\n\n    const builtDoc = useMemo(() => {\n      return buildDocument({\n        interpreterId,\n        inputDocument: doc,\n        baseUrl,\n        entrypointUrl,\n        importMapUrl\n      })\n    }, [interpreterId, doc, baseUrl, entrypointUrl, importMapUrl])\n\n    if (Object.keys(transpiledFilesMap).length === 0) {\n      return null\n    }\n\n    const rootClasses = classnames(classes.root, className)\n\n    return (\n      <iframe\n        ref={inputRef}\n        key={key}\n        className={rootClasses}\n        style={style}\n        srcDoc={builtDoc}\n      />\n    )\n  }\n)\n","export const v4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n","import React from 'react'\nimport classes from './spinner.module.css'\n\nexport const Spinner = () => (\n  <div className={classes.spinner}>\n    <div className={classes.doubleBounce1}></div>\n    <div className={classes.doubleBounce2}></div>\n  </div>\n)\n","import React, { useEffect, useRef, FC } from 'react'\n\nexport const AutoScroll: FC = () => {\n  const el = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    el.current?.scrollIntoView({ block: 'end', behavior: 'smooth' })\n  })\n\n  return <div ref={el}></div>\n}\n","import React, { FC, useState, CSSProperties } from 'react'\nimport classnames from 'classnames'\nimport { Log } from '../../interpreter'\nimport { Console as ConsoleFeed } from 'console-feed'\nimport {\n  MdExpandLess as ExpandIcon,\n  MdExpandMore as CollapseIcon,\n  MdDoNotDisturb as ClearIcon\n} from 'react-icons/md'\nimport { AutoScroll } from '../auto-scroll'\nimport classes from './console.module.css'\nimport { useThemeColors } from '../../utils/hooks'\nimport { isDark } from '../../utils/colors'\n\nexport interface ConsoleProps {\n  open: boolean\n  logs: Log[]\n  className?: string\n  onToggle?: (open: boolean) => void\n  onClear?: () => void\n  theme?: string\n  style?: CSSProperties\n}\n\nconst consoleStyles = {\n  BASE_BACKGROUND_COLOR: 'none',\n  BASE_FONT_SIZE: '.9rem',\n  LOG_ERROR_BACKGROUND: 'rgba(255,0,0,.1)',\n  LOG_WARN_BACKGROUND: 'rgba(255,255,0,.1)',\n  LOG_INFO_BACKGROUND: 'rgba(0,0,255,.1)'\n}\n\nexport const Console: FC<ConsoleProps> = ({\n  open,\n  logs,\n  className = '',\n  onToggle,\n  onClear,\n  theme = 'dracula',\n  style\n}) => {\n  const [stickToBottom, setStickToBottom] = useState(true)\n\n  const rootClasses = classnames(\n    classes.root,\n    open ? classes.open : classes.closed,\n    className\n  )\n\n  const consoleFeedClasses = classnames(classes.content, !open && classes.hide)\n\n  const handleScroll = (e: any) => {\n    const elem = e.target\n    if (elem.scrollTop >= elem.scrollHeight - elem.offsetHeight) {\n      !stickToBottom && setStickToBottom(true)\n    } else {\n      stickToBottom && setStickToBottom(false)\n    }\n  }\n\n  const colors = useThemeColors(theme)\n\n  const styles = {\n    root: { background: colors.background },\n    header: { background: colors.background, color: colors.foreground },\n    toggle: { background: colors.overlay }\n  }\n\n  return (\n    <>\n      <div className={classes.headerPlaceholder}></div>\n      <div className={rootClasses} style={{ ...styles.root, ...style }}>\n        <div className={classes.header} style={styles.header}>\n          <div\n            tabIndex={0}\n            role='button'\n            className={classes.toggleButton}\n            onClick={() => onToggle?.(!open)}\n            title='Toggle Console'\n            aria-label='Toggle Console'\n            style={styles.toggle}\n          >\n            <span className={classes.label}>Console</span>\n            <div className={classes.icons}>\n              <button\n                className={classes.clearButton}\n                onClick={(e) => {\n                  onClear?.()\n                  setStickToBottom(true)\n                  e.stopPropagation()\n                }}\n                title='Clear Console'\n                aria-label='Clear Console'\n              >\n                <ClearIcon />\n              </button>\n              <span className={classes.toggleIcon}>\n                {open ? <CollapseIcon /> : <ExpandIcon />}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div onScroll={handleScroll} className={consoleFeedClasses}>\n          <ConsoleFeed\n            styles={consoleStyles}\n            logs={logs as any}\n            variant={isDark(colors.background) ? 'dark' : 'light'}\n          />\n          {stickToBottom && <AutoScroll />}\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { useState, ComponentType, FC, CSSProperties } from 'react'\nimport classnames from 'classnames'\nimport {\n  Interpreter,\n  InterpreterProps,\n  Log,\n  InterpreterHandle\n} from '../interpreter'\nimport { Spinner } from './spinner'\nimport { Console as DefaultConsoleComponent, ConsoleProps } from './console'\nimport { MdClose } from 'react-icons/md'\nimport _classes from './sandbox.module.css'\n\nexport enum Status {\n  Loading = 'loading',\n  Loaded = 'loaded',\n  Errored = 'errored'\n}\n\nexport interface ErrorComponentProps {\n  error: Error\n  onClose: () => void\n  theme: string\n  style?: CSSProperties\n  className?: string\n}\n\nexport interface LoadingComponentProps {\n  theme: string\n  style?: CSSProperties\n  className?: string\n}\n\nexport type LoadingComponent = ComponentType<LoadingComponentProps>\nexport type ErrorComponent = ComponentType<ErrorComponentProps>\nexport type ConsoleComponent = ComponentType<ConsoleProps>\n\nexport interface SandboxProps extends InterpreterProps {\n  components?: {\n    loading?: LoadingComponent | null\n    error?: ErrorComponent | null\n    console?: ConsoleComponent | null\n  }\n  handles?: {\n    root?: (el: HTMLDivElement | null) => void\n    interpreter?: (instance: InterpreterHandle | null) => void\n  }\n  theme?: string\n  styles?: {\n    interpreter?: CSSProperties\n    loading?: CSSProperties\n    error?: CSSProperties\n    console?: CSSProperties\n  }\n  classes?: {\n    interpreter?: string\n    loading?: string\n    error?: string\n    console?: string\n  }\n}\n\nconst DefaultLoadingComponent: FC<LoadingComponentProps> = ({\n  style,\n  className\n}) => {\n  const rootClasses = classnames(_classes.loadingContainer, className)\n  return (\n    <div className={rootClasses} style={style}>\n      <Spinner />\n    </div>\n  )\n}\n\nconst DefaultErrorComponent: FC<ErrorComponentProps> = ({\n  error,\n  onClose,\n  className,\n  style\n}) => {\n  const rootClasses = classnames(_classes.errorContainer, className)\n\n  return (\n    <div className={rootClasses} style={style}>\n      <button className={_classes.closeButton} onClick={onClose}>\n        <MdClose />\n      </button>\n      <pre className={_classes.errorText}>{error.message}</pre>\n    </div>\n  )\n}\n\nconst defaultComponents = {\n  loading: DefaultLoadingComponent,\n  error: DefaultErrorComponent,\n  console: DefaultConsoleComponent\n}\n\nexport const Sandbox: FC<SandboxProps> = ({\n  onLoading,\n  onLoad,\n  onError,\n  onLog,\n  components,\n  theme = 'dracula',\n  styles,\n  classes,\n  handles,\n  ...otherProps\n}: SandboxProps) => {\n  const [status, setStatus] = useState(Status.Loading)\n  const [error, setError] = useState<Error | null>(null)\n  const [logs, setLogs] = useState<Log[]>([])\n  const [consoleOpen, setConsoleOpen] = useState<boolean>(false)\n\n  const pushLog = (log: Log) => {\n    setLogs((prev) => [...prev, log])\n    onLog?.(log)\n  }\n\n  const {\n    loading: LoadingComponent,\n    error: ErrorComponent,\n    console: ConsoleComponent\n  } = {\n    ...defaultComponents,\n    ...components\n  }\n\n  const handleLoading = () => {\n    setStatus(Status.Loading)\n    onLoading?.()\n  }\n\n  const handleLoad = () => {\n    setStatus(Status.Loaded)\n    onLoad?.()\n  }\n\n  const handleError = (error: Error) => {\n    setStatus(Status.Errored)\n    setError(error)\n    onError?.(error)\n  }\n\n  const clearConsole = () => {\n    setLogs([])\n  }\n\n  const interpreterClasses = classnames(\n    _classes.interpreter,\n    classes?.interpreter\n  )\n\n  return (\n    <div ref={handles?.root} className={_classes.root}>\n      <Interpreter\n        ref={handles?.interpreter}\n        {...otherProps}\n        onLog={pushLog}\n        onLoading={handleLoading}\n        onLoad={handleLoad}\n        onError={handleError}\n        className={interpreterClasses}\n        style={styles?.interpreter}\n      />\n      {status === Status.Loading && LoadingComponent && (\n        <div className={_classes.overlay}>\n          <LoadingComponent\n            className={classes?.loading}\n            theme={theme}\n            style={styles?.loading}\n          />\n        </div>\n      )}\n      {status === Status.Errored && ErrorComponent && error && (\n        <div className={_classes.overlay}>\n          <ErrorComponent\n            theme={theme}\n            style={styles?.error}\n            error={error}\n            onClose={() => {\n              setError(null)\n            }}\n            className={classes?.error}\n          />\n        </div>\n      )}\n      {ConsoleComponent && (\n        <ConsoleComponent\n          style={styles?.console}\n          className={classes?.console}\n          open={consoleOpen}\n          onToggle={setConsoleOpen}\n          onClear={clearConsole}\n          logs={logs}\n          theme={theme}\n        />\n      )}\n    </div>\n  )\n}\n","import React, { useRef, useEffect, FC } from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/mode/javascript/javascript.js'\nimport 'codemirror/mode/jsx/jsx.js'\nimport 'codemirror/mode/css/css.js'\nimport 'codemirror/theme/dracula.css'\nimport { Controlled as Codemirror } from 'react-codemirror2'\nimport { Editor as CodeMirrorEditor, EditorConfiguration } from 'codemirror'\nimport classnames from 'classnames'\nimport _classes from './editor.module.css'\n\nexport interface Highlight {\n  lines: number[]\n  className: string\n}\n\ninterface EditorProps {\n  value: string\n  onChange: (val: string) => void\n  theme?: string\n  classes?: {\n    root?: string\n  }\n  handles?: {\n    root?: (handle: CodeMirrorEditor | null) => void\n  }\n  highlight?: Highlight\n  tabSize?: number\n  mode?: EditorConfiguration['mode']\n  lineNumbers?: boolean\n  readOnly?: boolean\n}\n\nexport const Editor: FC<EditorProps> = ({\n  value,\n  onChange,\n  theme = 'dracula',\n  classes,\n  handles,\n  highlight,\n  tabSize = 2,\n  lineNumbers,\n  mode,\n  readOnly\n}) => {\n  const editorRef = useRef<CodeMirrorEditor>()\n\n  useEffect(() => {\n    if (editorRef.current) {\n      highlight?.lines.forEach((line) => {\n        editorRef.current?.addLineClass(line, 'background', highlight.className)\n      })\n      return () => {\n        highlight?.lines.forEach((line) => {\n          editorRef.current?.removeLineClass(\n            line,\n            'background',\n            highlight.className\n          )\n        })\n      }\n    }\n    return () => {}\n  }, [JSON.stringify(highlight)])\n\n  const classNames = classnames(_classes.root, classes?.root)\n\n  return (\n    <Codemirror\n      className={classNames}\n      editorDidMount={(editor) => {\n        handles?.root?.(editor)\n        editorRef.current = editor\n        editor.setSize('100%', '100%')\n        // Hacky, but needed to get editor\n        // to size properly after mount\n        setTimeout(() => {\n          editor.refresh()\n        }, 0)\n      }}\n      options={{\n        theme,\n        mode,\n        lineNumbers,\n        tabSize,\n        readOnly\n      }}\n      value={value}\n      onBeforeChange={(_, __, val) => onChange(val)}\n    />\n  )\n}\n","import React, {\n  useRef,\n  useLayoutEffect,\n  useMemo,\n  FC,\n  ComponentType,\n  CSSProperties\n} from 'react'\nimport classnames from 'classnames'\nimport { SourceFile } from '../../interpreter'\nimport { Editor, Highlight } from '../editor'\nimport { Editor as CodeMirrorEditor } from 'codemirror'\nimport { getFileExtension } from '../../utils/url'\nimport { useThemeColors } from '../../utils/hooks'\nimport _classes from './editor-group.module.css'\n\nconst getModeByExtension = (extension: string) => {\n  const modes = {\n    tsx: 'text/typescript',\n    ts: 'text/typescript',\n    jsx: 'text/jsx',\n    js: 'text/javascript',\n    json: 'text/json',\n    html: 'text/html',\n    css: 'text/css',\n    scss: 'text/x-scss',\n    less: 'text/x-less',\n    yaml: 'text/x-yaml',\n    yml: 'text/x-yaml'\n  }\n  return modes[extension] || 'text/typescript'\n}\n\nconst getEditorBaseOptions = (file: SourceFile) => {\n  return {\n    mode: getModeByExtension(getFileExtension(file.path)),\n    lineNumbers: true\n  }\n}\n\nconst useEditors = () => {\n  const editors = useRef<Record<string, CodeMirrorEditor>>({})\n\n  return useMemo(\n    () => ({\n      setEditor: (path: string, editor: CodeMirrorEditor | null) => {\n        if (!editor) {\n          delete editors.current[path]\n        } else {\n          editors.current[path] = editor\n        }\n      },\n      getEditor: (path: string) => {\n        return editors.current[path]\n      }\n    }),\n    []\n  )\n}\n\nexport interface HeaderComponentProps {\n  active: string\n  files: SourceFile[]\n  onActiveChange?: (path: string) => void\n  theme?: string\n  className?: string\n  style?: CSSProperties\n}\n\nexport type HeaderComponent = ComponentType<HeaderComponentProps>\n\nconst DefaultHeaderComponent: FC<HeaderComponentProps> = ({\n  files,\n  active,\n  onActiveChange,\n  theme = 'dracula',\n  style,\n  className\n}) => {\n  const colors = useThemeColors(theme)\n  const _styles = {\n    header: {\n      background: colors.background,\n      color: colors.foreground,\n      ...style\n    },\n    headerOverlay: { background: colors.overlay }\n  }\n  const rootClasses = classnames(_classes.header, className)\n  return (\n    <div className={rootClasses} style={_styles.header}>\n      <div\n        className={_classes.headerOverlay}\n        style={_styles.headerOverlay}\n      ></div>\n      <div className={_classes.tabs}>\n        {files.map((file) => (\n          <button\n            key={file.path}\n            className={_classes.tab}\n            style={{\n              background: active === file.path ? colors.background : 'none'\n            }}\n            onClick={() => onActiveChange?.(file.path)}\n          >\n            {file.path}\n          </button>\n        ))}\n      </div>\n    </div>\n  )\n}\n\ninterface EditorOptions {\n  highlight?: Highlight\n  tabSize?: number\n  lineNumbers?: boolean\n  readOnly?: boolean\n}\n\nexport type GetEditorOptions = (file: SourceFile) => EditorOptions | undefined\n\nexport interface EditorGroupProps {\n  active: string\n  files: SourceFile[]\n  onFileChange?: (file: SourceFile) => void\n  onActiveChange?: (path: string) => void\n  theme?: string\n  editorOptions?: GetEditorOptions\n  focusOnActivation?: boolean\n  classes?: {\n    root?: string\n    header?: string\n    editor?: string\n  }\n  styles?: {\n    root?: CSSProperties\n    header?: CSSProperties\n  }\n  components?: {\n    header?: HeaderComponent | null\n  }\n  handles?: {\n    root: (el: HTMLDivElement | null) => void\n    editor: (path: string, editor: CodeMirrorEditor | null) => void\n  }\n}\n\nconst defaultComponents = {\n  header: DefaultHeaderComponent\n}\n\nexport const EditorGroup: FC<EditorGroupProps> = ({\n  files,\n  active,\n  onActiveChange,\n  onFileChange,\n  focusOnActivation = true,\n  theme,\n  editorOptions = () => undefined,\n  handles,\n  components,\n  classes,\n  styles\n}) => {\n  const editors = useEditors()\n  const activeFile = files.find((file) => file.path === active)\n\n  const { header: HeaderComponent } = {\n    ...defaultComponents,\n    ...components\n  }\n\n  useLayoutEffect(() => {\n    if (focusOnActivation) {\n      editors.getEditor(active)?.focus()\n    }\n    editors.getEditor(active)?.refresh()\n  }, [active, focusOnActivation])\n\n  const handleChange = (value: string) => {\n    if (activeFile) {\n      onFileChange?.({\n        ...activeFile,\n        contents: value\n      })\n    }\n  }\n\n  const rootClasses = classnames(classes?.root, _classes.root)\n\n  return (\n    <div\n      ref={(el) => handles?.root?.(el)}\n      className={rootClasses}\n      style={styles?.root}\n    >\n      <div className={_classes.headerContainer}>\n        {HeaderComponent && (\n          <HeaderComponent\n            className={classes?.header}\n            style={styles?.header}\n            active={active}\n            onActiveChange={onActiveChange}\n            files={files}\n            theme={theme}\n          />\n        )}\n      </div>\n      <div className={_classes.editorContainer}>\n        {files.map((file) => {\n          const baseEditorOptions = getEditorBaseOptions(file)\n          const providedEditorOptions = editorOptions(file)\n          const mergedEditorOptions = {\n            ...baseEditorOptions,\n            ...providedEditorOptions\n          }\n          return (\n            <Editor\n              handles={{\n                root: (editor) => {\n                  editors.setEditor(file.path, editor)\n                  handles?.editor?.(file.path, editor)\n                }\n              }}\n              key={file.path}\n              classes={{\n                root: classnames(\n                  _classes.editor,\n                  activeFile?.path !== file.path && _classes.hide,\n                  classes?.editor\n                )\n              }}\n              value={file.contents ?? ''}\n              onChange={handleChange}\n              theme={theme}\n              {...mergedEditorOptions}\n            />\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n","import React, {\n  useRef,\n  useCallback,\n  useEffect,\n  useState,\n  useMemo,\n  CSSProperties\n} from 'react'\nimport classnames from 'classnames'\nimport { Sandbox, SandboxProps } from '../sandbox'\nimport { EditorGroup, EditorGroupProps } from './editor-group'\nimport debounce from 'lodash.debounce'\nimport _classes from './playground.module.css'\nimport { SourceFile } from '../types'\n\nexport interface PlaygroundProps\n  extends Omit<SandboxProps, 'components' | 'styles' | 'classes' | 'handles'>,\n    Omit<EditorGroupProps, 'components' | 'styles' | 'handles' | 'classes'> {\n  layout?: PlaygroundLayout\n  tabs?: string[]\n  components?: {\n    sandbox?: SandboxProps['components']\n    editorGroup?: EditorGroupProps['components']\n  }\n  handles?: {\n    sandbox?: SandboxProps['handles']\n    editorGroup?: EditorGroupProps['handles']\n  }\n  classes?: {\n    root?: string\n    sandbox?: SandboxProps['classes']\n    editorGroup?: EditorGroupProps['classes']\n  }\n  styles?: {\n    root?: CSSProperties\n    sandbox?: SandboxProps['styles']\n    editorGroup?: EditorGroupProps['styles']\n  }\n}\n\nexport enum PlaygroundLayout {\n  Horizontal = 'horizontal',\n  Vertical = 'vertical'\n}\n\nexport const Playground = ({\n  doc,\n  files,\n  tabs,\n  onFileChange,\n  entrypoint,\n  importMap,\n  onLoading,\n  onLoad,\n  onError,\n  onLog,\n  transforms,\n  active,\n  onActiveChange,\n  theme = 'dracula',\n  layout = PlaygroundLayout.Vertical,\n  focusOnActivation,\n  components,\n  classes,\n  styles,\n  data,\n  editorOptions = () => undefined,\n  handles\n}: PlaygroundProps) => {\n  const interpreterRef = useRef<any>(null)\n\n  const [interpreterFiles, setInterpreterFiles] = useState(files)\n\n  const requestInterpreterUpdate = useCallback(\n    debounce((files) => {\n      setInterpreterFiles(files)\n    }, 1000),\n    []\n  )\n\n  useEffect(() => {\n    requestInterpreterUpdate(files)\n  }, [files])\n\n  const rootClasses = classnames(\n    _classes.root,\n    layout === PlaygroundLayout.Vertical\n      ? _classes.vertical\n      : _classes.horizontal,\n    classes?.root\n  )\n\n  const editorGroupFiles = useMemo(() => {\n    const array: SourceFile[] = []\n    tabs?.forEach((tab) => {\n      const file = files.find((file) => file.path === tab)\n      if (file) {\n        array.push(file)\n      }\n    })\n    return array.length ? array : files\n  }, [files, tabs])\n\n  return (\n    <div className={rootClasses} style={styles?.root}>\n      <div className={_classes.editorGroupContainer}>\n        <EditorGroup\n          files={editorGroupFiles}\n          active={active}\n          onFileChange={onFileChange}\n          onActiveChange={onActiveChange}\n          editorOptions={editorOptions}\n          theme={theme}\n          focusOnActivation={focusOnActivation}\n          components={components?.editorGroup}\n          handles={handles?.editorGroup}\n          classes={classes?.editorGroup}\n          styles={styles?.editorGroup}\n        />\n      </div>\n      <div className={_classes.interpreterContainer}>\n        <Sandbox\n          handles={{\n            ...handles,\n            interpreter: (handle) => {\n              interpreterRef.current = handle\n              handles?.sandbox?.interpreter?.(handle)\n            }\n          }}\n          doc={doc}\n          files={interpreterFiles}\n          entrypoint={entrypoint}\n          importMap={importMap}\n          onLoading={onLoading}\n          onLoad={onLoad}\n          onError={onError}\n          onLog={onLog}\n          transforms={transforms}\n          theme={theme}\n          data={data}\n          components={components?.sandbox}\n          classes={classes?.sandbox}\n          styles={styles?.sandbox}\n        />\n      </div>\n    </div>\n  )\n}\n","import { transform as transpile } from '@babel/standalone'\nimport { Transform } from '../interpreter'\n\nexport interface JavascriptTransformOptions {\n  isJSX?: boolean\n  targets?: string | Array<string> | Record<string, string>\n}\n\nexport const JavascriptTransform = ({\n  isJSX = true,\n  targets = '> 0.25%, not dead'\n}: JavascriptTransformOptions = {}) => {\n  const presets: any[] = [\n    [\n      'env',\n      {\n        // no module transpilation to CJS (!important)\n        modules: false,\n        targets\n      }\n    ]\n  ]\n\n  if (isJSX) {\n    presets.push('react')\n  }\n\n  const transform: Transform = (code: string) => {\n    return (\n      transpile(code, {\n        presets\n      }).code || ''\n    )\n  }\n  return transform\n}\n","import React, { useState } from 'react'\nimport {\n  Box,\n  Stack,\n  Heading,\n  Text,\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n  FormLabel\n} from '@chakra-ui/core'\nimport 'codemirror/lib/codemirror.css'\n// import 'codemirror/theme/dracula.css'\nimport 'codemirror/theme/seti.css'\nimport {\n  Playground,\n  SkypackImportMap,\n  SourceFile,\n  TypescriptTransform,\n  JavascriptTransform,\n  CssTransform,\n  Highlight,\n  EditorGroup,\n  PlaygroundLayout,\n  useThemeColors\n} from 'react-esm-sandbox'\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport indexJsx from '!!raw-loader!./assets/index.txt'\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport interactiveContainerJsx from '!!raw-loader!./assets/InteractiveContainer.txt'\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport utilsJs from '!!raw-loader!./assets/utils.txt'\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport useDataJs from '!!raw-loader!./assets/useData.txt'\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport stylesCss from '!!raw-loader!./assets/styles.txt'\n\nconst importMap = SkypackImportMap({\n  react: 'latest',\n  'react-dom': 'latest',\n  'framer-motion': 'latest'\n})\n\nconst transforms = {\n  jsx: JavascriptTransform(),\n  ts: TypescriptTransform(),\n  js: JavascriptTransform(),\n  css: CssTransform()\n}\n\ninterface FileHighlight {\n  filePath: string\n  highlight: Highlight\n}\n\nconst highlightExample: FileHighlight = {\n  highlight: {\n    lines: [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n    className: 'highlight'\n  },\n  filePath: 'index.jsx'\n}\n\nconst App = () => {\n  const [theme] = useState('seti')\n  const [files, setFiles] = useState([\n    {\n      path: 'index.jsx',\n      contents: indexJsx\n    },\n    {\n      path: 'InteractiveContainer.jsx',\n      contents: interactiveContainerJsx\n    },\n    {\n      path: 'utils.js',\n      contents: utilsJs\n    },\n    {\n      path: 'useData.js',\n      contents: useDataJs\n    },\n    {\n      path: 'styles.css',\n      contents: stylesCss\n    }\n  ])\n  const [active, setActive] = useState('index.jsx')\n  const [highlight, setHighlight] = useState<FileHighlight | null>(null)\n  const [scale, setScale] = useState<number>(1)\n  const colors = useThemeColors(theme)\n\n  const updateFile = (file: SourceFile) => {\n    setFiles((prev) =>\n      prev.map((f) => {\n        if (f.path === file.path) {\n          return file\n        }\n        return f\n      })\n    )\n  }\n\n  const utilsFile = files.find((f) => f.path === 'utils.js') as SourceFile\n  const containerFile = files.find(\n    (f) => f.path === 'InteractiveContainer.jsx'\n  ) as SourceFile\n\n  return (\n    <>\n      <Box\n        className='tutorial'\n        p={'4rem'}\n        w='55%'\n        position='relative'\n        zIndex={100}\n      >\n        <Stack spacing={6}>\n          <Heading size='lg'>React ESM Sandbox Demo</Heading>\n          <Text size='sm'>\n            In this mini tutorial, we'll build a special container that rotates\n            on hover. Try hovering over the image to the right and take note of\n            the effect.\n          </Text>\n          <Text size='sm'>\n            In order to implement this effect, we'll need a utility that can get\n            the mouse's position in relation to the center of the hovered\n            element. Below is a code snippet to grab the mouse position. Try\n            editing this file and see what happens.\n          </Text>\n          <EditorGroup\n            theme={theme}\n            classes={{\n              root: 'inline-editor'\n            }}\n            active={utilsFile.path}\n            files={[utilsFile]}\n            onFileChange={(val) => {\n              updateFile(val)\n              setActive(val.path)\n            }}\n          />\n          <Text size='sm'>\n            Next, let's create a component that consumes the mouse position and\n            performs rotations for us.\n          </Text>\n          <EditorGroup\n            theme={theme}\n            classes={{\n              root: 'inline-editor'\n            }}\n            active={containerFile.path}\n            files={[containerFile]}\n            onFileChange={(val) => {\n              updateFile(val)\n              setActive(val.path)\n            }}\n          />\n          <Text size='sm'>\n            <span>\n              On the right we consume InteractiveContainer in the Playground.{' '}\n            </span>\n            <span\n              className={'highlightable'}\n              onMouseEnter={() => {\n                setActive('index.jsx')\n                setHighlight(highlightExample)\n              }}\n              onMouseLeave={() => setHighlight(null)}\n            >\n              Try hovering over this to have a look at the App component where\n              InteractiveContainer is used\n            </span>\n            .\n          </Text>\n          <Text size='sm'>\n            Another neat thing about react-esm-sandbox is that you can\n            communicate with the interpreter in real time. This slider is hooked\n            up to control the scale of the image in the interpreter.\n          </Text>\n          <FormLabel>Image Scale</FormLabel>\n          <Slider\n            colorScheme='blue'\n            defaultValue={scale}\n            onChange={setScale}\n            min={0.5}\n            max={1.5}\n            step={0.1}\n          >\n            <SliderTrack>\n              <SliderFilledTrack />\n            </SliderTrack>\n            <SliderThumb bg='blue.600' />\n          </Slider>\n        </Stack>\n      </Box>\n      <Box position='fixed' w='45%' top={0} right={0} bottom={0}>\n        <Playground\n          active={active}\n          onActiveChange={setActive}\n          onLoading={() => console.log('loading')}\n          onLoad={() => console.log('loaded')}\n          onError={(err: any) => {\n            console.log('error', err)\n          }}\n          entrypoint='index.jsx'\n          files={files}\n          importMap={importMap}\n          transforms={transforms}\n          onFileChange={updateFile}\n          theme={theme}\n          editorOptions={(file) => {\n            const base = {}\n            if (highlight && file.path === highlight.filePath) {\n              return {\n                ...base,\n                highlight: highlight.highlight\n              }\n            }\n            return base\n          }}\n          layout={PlaygroundLayout.Vertical}\n          focusOnActivation={false}\n          styles={{\n            sandbox: {\n              interpreter: {\n                background: colors.background,\n                borderTop: `3px solid ${colors.overlay}`\n              },\n              loading: {\n                color: colors.foreground\n              }\n            }\n          }}\n          data={scale}\n        />\n      </Box>\n    </>\n  )\n}\n\nexport default App\n","import { Dependencies, ImportMap } from '../types'\n\nexport const SkypackImportMap = (dependencies: Dependencies): ImportMap => {\n  const importMap: ImportMap = {\n    imports: {}\n  }\n  Object.entries(dependencies).forEach(([packageName, packageVersion]) => {\n    importMap.imports[\n      packageName\n    ] = `https://cdn.skypack.dev/${packageName}@${packageVersion}`\n  })\n  return importMap\n}\n","import { transform as transpile } from '@babel/standalone'\nimport { Transform } from '../interpreter'\n\nexport interface TypescriptTransformOptions {\n  isTSX?: boolean\n  jsxPragma?: string\n  allowNamespaces?: boolean\n  allowDeclareFields?: boolean\n  onlyRemoveTypeImports?: boolean\n}\n\nexport const TypescriptTransform = ({\n  isTSX = true,\n  jsxPragma = 'React',\n  allowNamespaces = true,\n  allowDeclareFields = true,\n  onlyRemoveTypeImports = true\n}: TypescriptTransformOptions = {}) => {\n  const transform: Transform = (code: string) => {\n    return (\n      transpile(code, {\n        presets: [\n          [\n            'env',\n            {\n              // no module transpilation to CJS (!important)\n              modules: false\n            }\n          ],\n          'react',\n          [\n            'typescript',\n            {\n              allExtensions: true,\n              isTSX,\n              jsxPragma,\n              allowNamespaces,\n              allowDeclareFields,\n              onlyRemoveTypeImports\n            }\n          ]\n        ]\n      }).code || ''\n    )\n  }\n  return transform\n}\n","import { Transform } from '../interpreter'\n\nexport const CssTransform = (): Transform => (code: string) => {\n  return `\n  function __esmSandbox__injectStyle(css) {\n    const headEl = document.head || document.getElementsByTagName('head')[0];\n    const styleEl = document.createElement('style');\n    styleEl.type = 'text/css';\n    if (styleEl.styleSheet) {\n      styleEl.styleSheet.cssText = css;\n    } else {\n      styleEl.appendChild(document.createTextNode(css));\n    }\n    headEl.appendChild(styleEl);\n  }\n  __esmSandbox__injectStyle(${JSON.stringify(code)});\\n`\n}\n","export default \"import React, { useEffect } from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\nimport InteractiveContainer from \\\"./InteractiveContainer.jsx\\\";\\nimport useData from \\\"./useData.js\\\";\\nimport \\\"./styles.css\\\";\\n\\nconst transition = { type: 'spring', damping: 50, stiffness: 250 }\\n\\nfunction App() {\\n  const scale = useData();\\n\\n  return (\\n    <InteractiveContainer animate={{ scale, transition }} className=\\\"image-container\\\">\\n      <img\\n        className=\\\"image\\\"\\n        src=\\\"https://picsum.photos/id/66/900/600\\\"\\n        alt=\\\"kitten\\\"\\n      />\\n    </InteractiveContainer>\\n  );\\n}\\n\\nconst rootElement = document.getElementById(\\\"root\\\");\\nReactDOM.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>,\\n  rootElement\\n);\\n\";","export default \"import React from \\\"react\\\";\\nimport { motion, useSpring } from \\\"framer-motion\\\";\\nimport { getRelativeMousePosition } from \\\"../utils.js\\\";\\n\\nexport default function InteractiveContainer({ style, ...otherProps }) {\\n  const x = useSpring(0, { stiffness: 1000, damping: 50 });\\n  const y = useSpring(0, { stiffness: 1000, damping: 50 });\\n\\n  const handleMouseMove = (e) => {\\n    const pos = getRelativeMousePosition(e);\\n    x.set(pos.x / 25);\\n    y.set(-pos.y / 25);\\n  };\\n\\n  const handleMouseLeave = (e) => {\\n    x.set(0);\\n    y.set(0);\\n  };\\n\\n  return (\\n    <motion.div\\n      {...otherProps}\\n      style={{ rotateY: x, rotateX: y, perspective: 500, ...style }}\\n      onMouseMove={handleMouseMove}\\n      onMouseLeave={handleMouseLeave}\\n    />\\n  );\\n}      \\n\";","export default \"export const getRelativeMousePosition = (e) => {\\n  const el = e.currentTarget;\\n  const mousePosition = {\\n    x: e.pageX,\\n    y: e.pageY\\n  };\\n  const elementCenter = {\\n    x: el.offsetLeft + el.offsetWidth / 2,\\n    y: el.offsetTop + el.offsetHeight / 2\\n  };\\n  return {\\n    x: mousePosition.x - elementCenter.x,\\n    y: mousePosition.y - elementCenter.y\\n  };\\n};\\n\";","export default \"import { useState, useEffect } from 'react';\\n\\nconst useData = () => {\\n  const [state, setState] = useState();\\n\\n  useEffect(() => {\\n    const listener = (event) => {\\n      setState(event.data)\\n    };\\n    window.addEventListener('message', listener)\\n    return () => {\\n      window.removeEventListener('message', listener)\\n    }\\n  }, []);\\n  \\n  return state;\\n};\\n\\nexport default useData;\\n\";","export default \"html,\\nbody,\\n#root {\\n  height: 100%;\\n}\\n\\nbody {\\n  margin: 0;\\n}\\n\\n#root {\\n  padding: 36px;\\n  box-sizing: border-box;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.image-container {\\n  height: 100%;\\n  width: 400px;\\n}\\n\\n.image {\\n  height: 100%;\\n  width: 100%;\\n  object-fit: cover;\\n  display: block;\\n  border-radius: 8px;\\n}\\n\";","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { ChakraProvider, extendTheme } from '@chakra-ui/core'\n\n// 3. extend the theme\nconst customTheme = extendTheme({\n  config: {\n    useSystemColorMode: false,\n    initialColorMode: 'light'\n  },\n  fonts: {\n    body: `\"Fira Code\", system-ui, sans-serif`,\n    heading: '\"Fira Code\"',\n    code: '\"Fira Code\"'\n  },\n  colors: {\n    white: '#f0f3f7',\n    gray: {\n      50: '#eef4f9',\n      100: '#d3d8de',\n      200: '#b7bbc6',\n      300: '#99a0af',\n      400: '#7c8498',\n      500: '#636a7f',\n      600: '#4d5264',\n      700: '#373a47',\n      800: '#21222c',\n      900: '#0b0b14'\n    }\n  }\n})\n\nReactDOM.render(\n  <ChakraProvider theme={customTheme}>\n    <App />\n  </ChakraProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}